@page "/patientDetails"
<h3>Patient Details</h3>
<h2>Page 1 of 4</h2>

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using UI.Areas.PatientCaseReview.Pages.ViewModels;
@using UI.Areas.PatientCaseReview.Pages.ViewModels.Enums;
@using UI.Services;
@inject IPatientDetailsService patientService
@inject MudBlazor.ISnackbar snackBar

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                
                
                <MudTextField @bind-Value="patient.FirstName" T="string" Label="First Name" Variant="Variant.Text" Required="true" RequiredError="Patient first name is required!" />
                <MudTextField @bind-Value= "patient.LastName" T="string" Label="Last Name" Required="true" RequiredError="Patient last name is required!" />
                
                                
                <div class="d-flex">
                    <MudRadioGroup @bind-SelectedOption ="selectedGender" T="string" Required="true" RequiredError="Gender is required!">
                        <MudRadio Option="@("Male")">Male</MudRadio>
                        <MudRadio Option="@("Female")">Female</MudRadio>
                    </MudRadioGroup>
                </div>
                <MudTextField T="string" Label="Email" Required="true" RequiredError="Email is required!"
                              Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" />

                <MudTextField T="string" Label="Phone number" Required="true" RequiredError="Phone number is required!" />
                <MudTextField T="Int16" Label="Age" Required="true" RequiredError="Age is required!" />
                <MudTextField T="Int16" Label="Weight (Kg)" Required="true" RequiredError="Weight is required!" />
                <MudTextField T="Int16" Label="Height (Cm)" Required="true" RequiredError="Age is required!" />
                <div class="d-flex align-center justify-space-between">
                    <MudCheckBox T="bool" Required="true" RequiredError="You must agree to terms and conditions" Label="I agree to terms and conditions!" />
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto" OnClick="SavePatient">Submit</MudButton>
                </div>
            </MudForm>
        </MudPaper>
        
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>form.Validate())">Validate</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.ResetAsync())" Class="mx-2">Reset</MudButton>
            <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick="@(()=>form.ResetValidation())">Reset Validation</MudButton>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="5">
        <MudPaper Class="pa-4 mud-height-full">
            <MudText Typo="Typo.subtitle2">@($"Errors ({errors.Length})")</MudText>
                @foreach (var error in errors)
            {
                <MudText Color="@Color.Error">@error</MudText>
            }
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;
    public string selectedGender { get; set; }
    private PatientViewModel patient = new PatientViewModel();
    private void SavePatient()
    {
        patient.Gender = selectedGender;
        patientService.SavePatientDetails(patient);
        snackBar.Add("Patient details saved:::", Severity.Success);
    }

}

