@page "/demographics"
<h3>Demographics</h3>
<h2>Page 2 of 4</h2>

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using UI.Areas.PatientCaseReview.Pages.ViewModels;
@using UI.Areas.PatientCaseReview.Pages.ViewModels.Enums;
@using UI.Services;
@inject IPatientDetailsService patientService
@inject MudBlazor.ISnackbar snackBar
@inject NavigationManager NavigationManager




<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">

                <MudTextField @bind-Value="demographics.Country" T="string" Label="Country of Residence" Required="true" RequiredError="Country of residence is required!" />
                <MudTextField @bind-Value="demographics.Region" T="string" Label="Region of residence " Required="false"  />

                <MudTextField @bind-Value="demographics.CurrentTown" T="string" Label="Current residence town" Required="true" RequiredError="Current residence is required!"   />
                <MudTextField @bind-Value="demographics.PreviousTowns" T="string" Label="Previous residential towns " Required="false" RequiredError=" is required!"         />
                
                
                
                <MudTextField @bind-Value="demographics.Occupation" T="string" Label="Occupation" Required="true" RequiredError="Occupation is required!" />
                
                <div class="d-flex align-center justify-space-between">
                    <MudCheckBox T="bool" Required="true" RequiredError="You must agree demographics are correct" Label="Demographics are correct!" />
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto" OnClick="SaveDemographics">Submit</MudButton>
                </div>
            </MudForm>
        </MudPaper>
               
    </MudItem>
    <MudItem xs="12" sm="5">
        <MudPaper Class="pa-4 mud-height-full">
            
            @foreach (var error in errors)
            {
                <MudText Color="@Color.Error">@error</MudText>
            }
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    bool success;
    string[] errors = { };
    
    MudForm form;
    private Guid patientGuid;
    private DemographicsViewModel demographics = new DemographicsViewModel();
    
    string QueryString = "";

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        QueryString = uri.Query;
        patientGuid = Guid.Parse(QueryString.Substring(QueryString.IndexOf('=') + 1));
    }
    private void SaveDemographics()
    {
        demographics.PatientGuid = patientGuid;
        patientService.SaveDemographics(demographics);
        snackBar.Add("Patient demographics saved successfully:::", Severity.Success);
        NavigationManager.NavigateTo($"/symptoms?fieldValue={patientGuid}");
    }

}

